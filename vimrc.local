" Disable pylint checking every save
let g:pymode_lint_write = 0
" spelling shortcuts
" un-indent shortcuts

" Space leads the way!
let g:spf13_leader=" "
let mapleader=g:spf13_leader

" ctrlp does not work from file buffer with autocd
let g:spf13_no_autochdir = 1

" map common leader stuff
map <Leader>w :w<CR>
map <Leader>q :bdelete<CR>
map <Leader>x :x<CR>

" no highlight search
map <Leader>h :set nohlsearch<CR>

" disable folds
set nofoldenable

" edit .vimrc
map <Leader>v :e ~/.vimrc.local<CR>
map <Leader>V :e ~/.vimrc<CR>

" remap NERDTree
let g:nerdtree_tabs_open_on_gui_startup=1
nmap <silent> <F2> :NERDTreeToggle<CR>
let NERDTreeIgnore=['\.DS_Store$', '.ropeproject', '\.pyc', '\~$', '\.swo$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr']
let NERDTreeQuitOnOpen=0
map <Leader>n <plug>NERDTreeTabsToggle<CR>
map <Leader>f :NERDTreeFind<CR>
map <Leader>e <Plug>NERDTreeFromBookmark('exam2')<CR>

" Django template highlighting
au BufRead,BufNewFile *.html set filetype=htmldjango

" ctrlp
nmap <D-p> <C-p>

" rope
nmap <Leader>j :RopeGotoDefinition<CR>

" buffers
" these 2 conflict with Join
"nmap <S-J> :bp<CR>
"nmap <S-K> :bn<CR>
nmap <leader>ba :1,1000 bd!<CR>

" remap surround in visual mode
vmap s S

" input mode j-j becomes Escape
imap jj <Esc>

" Open vimgrep and put the cursor in the right position
map <leader>g :vimgrep // **/*.py<left><left><left><left><left><left><left><left><left>

" keep current line in the middle of the screen
set scrolloff=9999

" clojure filetype
au BufRead,BufNewFile *.clj set filetype=clojure

"GUI
"===

"let background='light'
"colorscheme lucius
"LuciusWhiteLowContrast
"g:lucius_style="light"
"g:lucius_contrast='normal'
"g:lucius_contrast_bg='low'

" no Uganda children intro
set shortmess+=I

" font
if has('gui_macvim')
    set guifont=Menlo\ Regular:h16
endif

" toggle background
map <F5> :let &background = ( &background == "dark"? "light" : "dark" )<CR>

" visually limit text at 80 chars
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%81v.\+/

" reload a outside-modified file automatically
set autoread

" disable folding
set nofoldenable

" Remove scrollbars
"set guioptions-=r
set guioptions-=l
set guioptions-=L
set guioptions-=b

" Remove menu bar
"set guioptions-=m

" Remove toolbar
set guioptions-=T

" Remove gui tabs
set guioptions-=e
set showtabline=2 " always show tab line

" enable line numbers
set norelativenumber
set nu

" needed for yankstack to work
"echo &rtp
"call yankstack#setup()
nmap <leader>p <Plug>yankstack_substitute_older_paste
nmap <leader>P <Plug>yankstack_substitute_newer_paste

" ctrlp
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_prompt_mappings = {
  \ 'AcceptSelection("e")': [],
  \ 'AcceptSelection("t")': ['<cr>', '<c-m>'],
  \ }

" svn blame "
vmap gl :<C-U>!svn blame <C-R>=expand("%:p") <CR> \| sed -n <C-R>=line("'<") <CR>,<C-R>=line("'>") <CR>p <CR>

" Rainbow parentheses"
map <Leader>r :RainbowParenthesesToggle<CR>
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
"
"
"disable pymode
"let g:pymode = 1

" Bundles
" =======

Bundle 'saltstack/salt-vim'
Bundle 'sirtaj/vim-openscad'
"Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'tpope/vim-repeat'
Bundle 'othree/html5.vim'
UnBundle 'maxbrunsfeld/vim-yankstack'
Bundle 'jonathanfilip/vim-lucius'
"Bundle 'mileszs/ack.vim'
Bundle 'kana/vim-fakeclip'

Bundle 'guns/vim-clojure-static'
Bundle 'kien/rainbow_parentheses.vim.git'
Bundle 'tpope/vim-fireplace'
Bundle 'tpope/vim-classpath.git'
Bundle 'vim-scripts/slimv.vim'

UnBundle 'kovisoft/slimv'
"Bundle 'klen/python-mode'
Bundle 'klen/rope-vim'


" Delete the default spf13 bundles I don't use.
UnBundle "myusuf3/numbers.vim"
UnBundle 'mattn/webapi-vim'
UnBundle 'mattn/gist-vim'
UnBundle 'spf13/PIV'
UnBundle 'briancollins/vim-jst'
UnBundle 'kchmck/vim-coffee-script'
UnBundle 'derekwyatt/vim-scala'
UnBundle 'derekwyatt/vim-sbt'
UnBundle 'amirh/HTML-AutoCloseTag'
UnBundle 'tpope/vim-rails'
UnBundle 'tpope/vim-markdown'
UnBundle 'spf13/vim-preview'
UnBundle 'tpope/vim-cucumber'
UnBundle 'quentindecock/vim-cucumber-align-pipes'
UnBundle 'Puppet-Syntax-Highlighting'
UnBundle 'beyondwords/vim-twig'
UnBundle 'Lokaltog/vim-easymotion'












" Mappings to access buffers (don't use "\p" because a
" delay before pressing "p" would accidentally paste").
" \l       : list buffers
" \b \f \g : go back/forward/last-used
" \1 \2 \3 : go to buffer 1/2/3 etc
nnoremap <Leader>l :ls<CR>
nnoremap <Leader>b :bp<CR>
"nnoremap <Leader>f :bn<CR>
nnoremap <Leader>g :e#<CR>
nnoremap <Leader>1 :1b<CR>
nnoremap <Leader>2 :2b<CR>
nnoremap <Leader>3 :3b<CR>
nnoremap <Leader>4 :4b<CR>
nnoremap <Leader>5 :5b<CR>
nnoremap <Leader>6 :6b<CR>
nnoremap <Leader>7 :7b<CR>
nnoremap <Leader>8 :8b<CR>
nnoremap <Leader>9 :9b<CR>
nnoremap <Leader>0 :10b<CR>
" It's useful to show the buffer number in the status line.
set laststatus=2 statusline=%02n:%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P"
